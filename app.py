# -*- coding: utf-8 -*-

import streamlit as st
from deep_translator import GoogleTranslator
import time

# --- ‡∂Ö‡∂¥‡∑ö ‡∂Ø‡∑ê‡∂±‡∑î‡∂∏‡∑ä ‡∂¥‡∂Ø‡∑ä‡∂∞‡∂≠‡∑í‡∂∫ (Knowledge Base) ---
# ‡∂Ö‡∂±‡∑è‡∂ú‡∂≠‡∂∫‡∑ö‡∂Ø‡∑ì ‡∂Ö‡∂¥‡∑í‡∂ß ‡∂∏‡∑ô‡∂≠‡∂±‡∂ß ‡∑Ä‡∂†‡∂± ‡∂ë‡∂ö‡∂≠‡∑î ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂¥‡∑î‡∑Ö‡∑î‡∑Ä‡∂±‡∑ä
correction_rules = {}

def process_srt_content_batched(english_content):
    """
    ‡∑É‡∂∏‡∑ä‡∂¥‡∑ñ‡∂ª‡∑ä‡∂´ SRT ‡∂ú‡∑ú‡∂±‡∑î‡∑Ä ‡∂Ö‡∂ª‡∂ú‡∑ô‡∂±, ‡∂Ø‡∑ô‡∂∂‡∑É‡∑ä ‡∂ß‡∑í‡∂ö ‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∑ä (batches) ‡∑Ä‡∑Å‡∂∫‡∑ô‡∂±‡∑ä ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∂ª‡∂∫‡∑í.
    ‡∂∏‡∑ö ‡∂ö‡∑ä‚Äç‡∂ª‡∂∏‡∂∫ ‡∂â‡∂≠‡∑è‡∂∏‡∂≠‡∑ä ‡∑Ä‡∑ö‡∂ú‡∑Ä‡∂≠‡∑ä‡∂∫.
    """
    try:
        translator = GoogleTranslator(source='en', target='si')
        
        # SRT ‡∂ú‡∑ú‡∂±‡∑î‡∑Ä ‡∂∂‡∑ä‡∂Ω‡∑ú‡∂ö‡∑ä‡∑É‡∑ä ‡∑Ä‡∂Ω‡∂ß ‡∑Ä‡∑ô‡∂±‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
        blocks = english_content.strip().split('\n\n')
        total_blocks = len(blocks)
        
        # ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∑Ö ‡∂∫‡∑î‡∂≠‡∑î ‡∑É‡∑í‡∂∫‡∂Ω‡∑î‡∂∏ ‡∂Ø‡∑ô‡∂∂‡∑É‡∑ä ‡∂ë‡∂ö‡∂≠‡∑î ‡∂ö‡∂ª‡∂ú‡∑ê‡∂±‡∑ì‡∂∏
        dialogues_to_translate = []
        for block in blocks:
            lines = block.strip().splitlines()
            if len(lines) > 2:
                dialogues_to_translate.append("\n".join(lines[2:]))
            else:
                dialogues_to_translate.append("") # ‡∂Ø‡∑ô‡∂∂‡∑É‡∂ö‡∑ä ‡∂±‡∑ê‡∂≠‡∑í ‡∂∂‡∑ä‡∂Ω‡∑ú‡∂ö‡∑ä ‡∑É‡∂≥‡∑Ñ‡∑è

        # ‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∑ä ‡∑Ä‡∑Å‡∂∫‡∑ô‡∂±‡∑ä ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
        batch_size = 50  # ‡∂ë‡∂ö ‡∂¥‡∑è‡∂ª‡∂ö‡∂ß ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∂ª‡∂± ‡∂Ø‡∑ô‡∂∂‡∑É‡∑ä ‡∂ú‡∂´‡∂±
        translated_dialogues = []
        
        progress_bar = st.progress(0)
        status_text = st.empty()

        for i in range(0, len(dialogues_to_translate), batch_size):
            batch = dialogues_to_translate[i:i + batch_size]
            # ‡∑Ñ‡∑í‡∑É‡∑ä ‡∂±‡∑ú‡∑Ä‡∂± ‡∂Ø‡∑ô‡∂∂‡∑É‡∑ä ‡∂¥‡∂∏‡∂´‡∂ö‡∑ä ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫‡∂ß ‡∂∫‡∑ú‡∂∏‡∑î ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
            non_empty_batch = [d for d in batch if d]
            
            if non_empty_batch:
                # DeepL Translator ‡∂ë‡∂ö‡∂ß ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ‡∂¥‡∂ª‡∑í‡∂Ø‡∑í \n ‡∑Ä‡∂Ω‡∑í‡∂±‡∑ä join ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
                translated_batch = translator.translate_batch(non_empty_batch)
                
                # ‡∂∏‡∑î‡∂Ω‡∑ä batch ‡∂ë‡∂ö‡∑ö ‡∑Ñ‡∑í‡∑É‡∑ä ‡∂≠‡∑ê‡∂±‡∑ä ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂¥‡∑í‡∂ª‡∑Ä‡∑ì‡∂∏
                translated_iter = iter(translated_batch)
                full_translated_batch = [next(translated_iter) if d else "" for d in batch]
                translated_dialogues.extend(full_translated_batch)
            else:
                # ‡∑É‡∂∏‡∑ä‡∂¥‡∑ñ‡∂ª‡∑ä‡∂´ batch ‡∂ë‡∂ö‡∂∏ ‡∑Ñ‡∑í‡∑É‡∑ä ‡∂±‡∂∏‡∑ä
                translated_dialogues.extend([""] * len(batch))

            # Progress bar ‡∂ë‡∂ö ‡∑É‡∑Ñ text ‡∂ë‡∂ö update ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
            progress_percentage = min(int(((i + batch_size) / total_blocks) * 100), 100)
            progress_bar.progress(progress_percentage)
            status_text.text(f"‡∂Ø‡∑ô‡∂∂‡∑É‡∑ä ‡∂ö‡∑ú‡∂ß‡∑É‡∑ä {total_blocks}‡∂±‡∑ä {min(i + batch_size, total_blocks)}‡∂ö‡∑ä ‡∑É‡∂ö‡∑É‡∂∏‡∑í‡∂±‡∑ä ‡∂¥‡∑Ä‡∂≠‡∑ì... ({progress_percentage}%)")
            time.sleep(0.05)

        status_text.success("‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∑É‡∂∏‡∑ä‡∂¥‡∑ñ‡∂ª‡∑ä‡∂´‡∂∫‡∑í! ‡∂Ø‡∑ê‡∂±‡∑ä ‡∂ú‡∑ú‡∂±‡∑î‡∑Ä ‡∑É‡∂ö‡∑É‡∂∏‡∑í‡∂±‡∑ä ‡∂¥‡∑Ä‡∂≠‡∑ì...")

        # ‡∂Ö‡∑Ä‡∑É‡∂±‡∑ä SRT ‡∂ú‡∑ú‡∂±‡∑î‡∑Ä ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂ë‡∂ö‡∂Ω‡∑É‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
        final_blocks = []
        for i, block in enumerate(blocks):
            lines = block.strip().splitlines()
            if len(lines) > 1:
                header = lines[0] + '\n' + lines[1]
                final_block = header + '\n' + translated_dialogues[i]
                final_blocks.append(final_block)

        final_sinhala_srt = "\n\n".join(final_blocks)
        return final_sinhala_srt

    except Exception as e:
        st.error(f"‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∑ö‡∂Ø‡∑ì ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∂á‡∂≠‡∑í‡∑Ä‡∑í‡∂∫: {e}")
        return None

# --- Web App ‡∂ë‡∂ö‡∑ö ‡∂¥‡∑ô‡∂±‡∑î‡∂∏ ‡∑Ñ‡∂Ø‡∂± ‡∂≠‡∑ê‡∂± ---
st.set_page_config(page_title="‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω ‡∂ã‡∂¥‡∑É‡∑í‡∂ª‡∑ê‡∑É‡∑í ‡∑É‡∂ö‡∑É‡∂±‡∂∫", page_icon="üìù")
st.title("üìù ‡∑É‡∂ª‡∂Ω ‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω ‡∂ã‡∂¥‡∑É‡∑í‡∂ª‡∑ê‡∑É‡∑í ‡∑É‡∂ö‡∑É‡∂±‡∂∫ v6.0 (‡∑Ä‡∑ö‡∂ú‡∑Ä‡∂≠‡∑ä)")
st.markdown("‡∂î‡∂∂‡∂ú‡∑ö ‡∂â‡∂Ç‡∂ú‡∑ä‚Äç‡∂ª‡∑ì‡∑É‡∑í ‡∂ã‡∂¥‡∑É‡∑í‡∂ª‡∑ê‡∑É‡∑í ‡∂ú‡∑ú‡∂±‡∑î‡∑Ä ‡∂Ω‡∂∂‡∑è‡∂Ø‡∑ô‡∂±‡∑ä‡∂±. ‡∂ë‡∂∫ **‡∂ö‡∂´‡∑ä‡∂©‡∑è‡∂∫‡∂∏‡∑ä ‡∑Ä‡∑Å‡∂∫‡∑ô‡∂±‡∑ä** ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∂ª, ‡∂â‡∂≠‡∑è‡∂∏‡∂≠‡∑ä ‡∂â‡∂ö‡∑ä‡∂∏‡∂±‡∑í‡∂±‡∑ä ‡∂î‡∂∂‡∂ß ‡∂Ω‡∂∂‡∑è‡∂Ø‡∑ô‡∂±‡∑î ‡∂á‡∂≠.")

st.subheader("‡∂¥‡∑í‡∂∫‡∑Ä‡∂ª 1: ‡∂â‡∂Ç‡∂ú‡∑ä‚Äç‡∂ª‡∑ì‡∑É‡∑í `.srt` ‡∑Ü‡∂∫‡∑í‡∂Ω‡∑ä ‡∂ë‡∂ö Upload ‡∂ö‡∂ª‡∂±‡∑ä‡∂±")
uploaded_file = st.file_uploader("‡∂î‡∂∂‡∂ú‡∑ö ‡∂â‡∂Ç‡∂ú‡∑ä‚Äç‡∂ª‡∑ì‡∑É‡∑í .srt ‡∑Ü‡∂∫‡∑í‡∂Ω‡∑ä ‡∂ë‡∂ö ‡∂≠‡∑ù‡∂ª‡∂±‡∑ä‡∂±", type=['srt'])

if uploaded_file is not None:
    st.success(f"'{uploaded_file.name}' ‡∑Ü‡∂∫‡∑í‡∂Ω‡∑ä ‡∂ë‡∂ö ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö‡∑Ä ‡∂Ω‡∑ê‡∂∂‡∑î‡∂±‡∑í.")
    english_content = uploaded_file.getvalue().decode("utf-8")
    
    st.subheader("‡∂¥‡∑í‡∂∫‡∑Ä‡∂ª 2: ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∂ª ‡∂±‡∑í‡∑Ä‡∑ê‡∂ª‡∂Ø‡∑í ‡∂ö‡∂ª‡∂±‡∑ä‡∂±")
    
    if st.button("‚ú® ‡∂Ø‡∑ê‡∂±‡∑ä ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∂≠‡∑ä‡∂∏‡∂ö ‡∂ö‡∂ª‡∂±‡∑ä‡∂±"):
        final_content = process_srt_content_batched(english_content)
        
        if final_content:
            st.balloons()
            st.subheader("‡∂¥‡∑ä‚Äç‡∂ª‡∂≠‡∑í‡∂µ‡∂Ω‡∂∫: ‡∑É‡∂ö‡∑É‡∂± ‡∂Ω‡∂Ø ‡∑Ü‡∂∫‡∑í‡∂Ω‡∑ä ‡∂ë‡∂ö Download ‡∂ö‡∂ª‡∂ú‡∂±‡∑ä‡∂±")
            
            st.download_button(
               label="üì• ‡∑É‡∂ö‡∑É‡∂± ‡∂Ω‡∂Ø ‡∑É‡∑í‡∂Ç‡∑Ñ‡∂Ω ‡∑Ü‡∂∫‡∑í‡∂Ω‡∑ä ‡∂ë‡∂ö ‡∂∏‡∑ô‡∂≠‡∂±‡∑í‡∂±‡∑ä ‡∂∂‡∑è‡∂ú‡∂±‡∑ä‡∂±",
               data=final_content.encode('utf-8'),
               file_name=f"fixed_sinhala_{uploaded_file.name}",
               mime="text/plain"
            )
